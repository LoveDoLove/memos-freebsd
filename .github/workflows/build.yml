name: Build Memos for FreeBSD (All Architectures)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Memos FreeBSD (${{ matrix.goarch }})
    strategy:
      matrix:
        include:
          - goos: freebsd
            goarch: amd64
            suffix: freebsd-amd64
            cc: "clang --target=x86_64-unknown-freebsd14.1 --sysroot=/opt/freebsd"
          - goos: freebsd
            goarch: arm64
            suffix: freebsd-arm64
            cc: "clang --target=aarch64-unknown-freebsd14.1 --sysroot=/opt/freebsd"
          - goos: freebsd
            goarch: 386
            suffix: freebsd-386
            cc: "clang --target=i386-unknown-freebsd14.1 --sysroot=/opt/freebsd"
          - goos: freebsd
            goarch: arm
            suffix: freebsd-arm
            cc: "clang --target=arm-unknown-freebsd14.1 --sysroot=/opt/freebsd"
          - goos: freebsd
            goarch: riscv64
            suffix: freebsd-riscv64
            cc: "clang --target=riscv64-unknown-freebsd14.1 --sysroot=/opt/freebsd"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "stable"
          check-latest: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Corepack
        run: |
          npm install -g corepack
          corepack enable

      - name: Setup FreeBSD base (FreeBSD only)
        if: matrix.goos == 'freebsd'
        run: |
          wget -q https://download.freebsd.org/releases/amd64/14.3-RELEASE/base.txz
          sudo mkdir /opt/freebsd && sudo tar -xf ./base.txz -C /opt/freebsd

      - name: Build Memos
        run: |
          export LATEST_APP=$(wget -qO- https://api.github.com/repos/usememos/memos/tags | gawk -F '["v]' '/name/{print "v"$5;exit}')
          git clone -b $LATEST_APP https://github.com/usememos/memos
          cd memos/web && pnpm i --frozen-lockfile && pnpm build
          rm -rf ../server/router/frontend/dist
          mkdir -p ../server/router/frontend
          cp -R dist ../server/router/frontend/dist
          cd .. && bash ../build.sh ${{ matrix.goos }} ${{ matrix.goarch }} ${{ matrix.suffix }} "${{ matrix.cc }}"

      # - name: Upload artifact
      #   uses: actions/upload-artifact@main
      #   with:
      #     name: memos-freebsd
      #     path: |
      #       memos/memos

      - name: Generate release tag
        id: tag
        run: echo "release_tag=$(wget -qO- https://api.github.com/repos/usememos/memos/tags | gawk -F '["v]' '/name/{print "v"$5;exit}')" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            memos/memos-*
          token: ${{ github.token }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
